# Generated by Django 3.0.8 on 2020-08-04 12:46

import annoying.fields
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import nollesystemet.managers
import nollesystemet.models.misc
import nollesystemet.models.happening
import nollesystemet.models.site
import nollesystemet.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DrinkOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drink', models.CharField(max_length=30)),
                ('price', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name': 'Dryckesalternativ',
                'verbose_name_plural': 'Dryckesalternativ',
            },
        ),
        migrations.CreateModel(
            name='DynamicNolleFormQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_label', models.CharField(max_length=30, unique=True)),
                ('title', models.CharField(max_length=150, null=None, unique=True)),
                ('question_type', models.PositiveSmallIntegerField(choices=[(1, 'Single choice'), (2, 'Multiple choice'), (3, 'Text input')], null=None)),
            ],
            options={
                'verbose_name': 'nØlleformulärsfråga',
                'verbose_name_plural': 'nØlleformulärsfrågor',
            },
        ),
        migrations.CreateModel(
            name='DynamicNolleFormQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=400, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('group', models.CharField(blank=True, max_length=400, null=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.DynamicNolleFormQuestion', validators=[nollesystemet.models.misc.validate_no_emoji])),
            ],
            options={
                'verbose_name': 'Svar till nØlleformulärsfråga',
                'verbose_name_plural': 'Svar till nØlleformulärsfråga',
                'unique_together': {('question', 'group'), ('question', 'value')},
            },
        ),
        migrations.CreateModel(
            name='ExtraOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_option', models.CharField(max_length=30)),
                ('price', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name': 'Tillval',
                'verbose_name_plural': 'Tillval',
            },
        ),
        migrations.CreateModel(
            name='Happening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('image_file_path', models.CharField(max_length=50)),
                ('food', models.BooleanField(default=True)),
                ('takes_registration', models.BooleanField(default=False)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Ej publicerad'), (2, 'Publicerad'), (3, 'Öppen för anmälan'), (4, 'Stängd för anmälan'), (5, 'Genomfört')], default=1)),
                ('user_types', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Fadder'), (2, 'nØllan'), (3, 'Senior'), (4, 'Extern'), (5, 'Administrativ')], default=[1, 2], max_length=9)),
                ('contact_name', models.CharField(max_length=150)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(max_length=254)),
                ('location', models.CharField(max_length=200)),
                ('include_drink_in_price', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Evenemang',
                'verbose_name_plural': 'Evenemang',
                'permissions': [('create_happening', 'Can create happenings'), ('edit_happening', 'Can edit any happening')],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NolleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Namn')),
                ('description', models.TextField(blank=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('schedule', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name': 'nØllegrupp',
                'verbose_name_plural': 'nØllegrupper',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Sida',
                'verbose_name_plural': 'Sidor',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Fadder'), (2, 'nØllan'), (3, 'Senior'), (4, 'Extern'), (5, 'Administrativ')], verbose_name='Användartyp')),
                ('program', models.PositiveSmallIntegerField(choices=[(0, 'Inget'), (1, 'Teknisk fysik'), (2, 'Teknisk matematik')], default=0)),
                ('kth_id', models.CharField(blank=True, max_length=20, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('phone_number', models.CharField(blank=True, max_length=30, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('food_preference', models.CharField(blank=True, max_length=150, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('auth_user', annoying.fields.AutoOneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('nolle_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nollesystemet.NolleGroup', verbose_name='nØllegrupp')),
            ],
            options={
                'verbose_name': 'Användarprofil',
                'verbose_name_plural': 'Användarprofiler',
                'permissions': [('see_users', 'Can see any user profile'), ('edit_users', 'Can edit any user profile'), ('edit_system', 'Can edit the system itself')],
                'abstract': False,
            },
            managers=[
                ('objects', nollesystemet.managers.UserProfileManager()),
            ],
        ),
        migrations.CreateModel(
            name='SiteParagraphList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, validators=[nollesystemet.models.site.validate_variable_name])),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraph_lists', to='nollesystemet.Site')),
            ],
            options={
                'verbose_name': 'Styckeslista',
                'verbose_name_plural': 'Styckeslistor',
                'unique_together': {('key', 'site')},
            },
        ),
        migrations.CreateModel(
            name='SiteParagraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_num', models.PositiveSmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=200, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('text', models.TextField(blank=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('paragraph_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraphs', to='nollesystemet.SiteParagraphList')),
            ],
            options={
                'verbose_name': 'Stycke',
                'verbose_name_plural': 'Stycken',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_preference', models.CharField(max_length=150, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('other', models.CharField(blank=True, max_length=300, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(default=False, editable=False)),
                ('attended', models.BooleanField(default=False, editable=False)),
                ('drink_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nollesystemet.DrinkOption')),
                ('extra_option', models.ManyToManyField(blank=True, to='nollesystemet.ExtraOption')),
                ('happening', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.Happening')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.UserProfile')),
            ],
            options={
                'verbose_name': 'Anmälan',
                'verbose_name_plural': 'Anmälningar',
                'permissions': [('see_registration', 'Can see any registration'), ('edit_registration', 'Can edit any registration')],
            },
        ),
        migrations.AddField(
            model_name='nollegroup',
            name='forfadders',
            field=models.ManyToManyField(blank=True, related_name='responsible_nolle_group', to='nollesystemet.UserProfile'),
        ),
        migrations.CreateModel(
            name='NolleFormAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('last_name', models.CharField(max_length=50, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('age', models.PositiveSmallIntegerField()),
                ('age_feeling', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('home_address', models.CharField(max_length=400, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('phone_number', models.CharField(max_length=30, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('contact_name', models.CharField(max_length=100, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('contact_relation', models.CharField(choices=[('Förälder', 'Förälder'), ('Syskon', 'Syskon'), ('Släkting', 'Släkting'), ('Vän', 'Vän')], max_length=200)),
                ('contact_phone_number', models.CharField(max_length=30, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('food_preference', models.TextField(blank=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('can_photograph', models.BooleanField()),
                ('other', models.TextField(blank=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('about_the_form', models.CharField(choices=[('Askalas!', 'Askalas!'), ('Dunder', 'Dunder'), ('Lagom bra', 'Lagom bra'), ('Risigt', 'Risigt')], max_length=200)),
                ('dynamic_answers', models.ManyToManyField(editable=False, to='nollesystemet.DynamicNolleFormQuestionAnswer')),
                ('user', models.OneToOneField(editable=False, limit_choices_to={'user_type__is': 2}, on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.UserProfile')),
            ],
            options={
                'verbose_name': 'nØlleformulärssvar',
                'verbose_name_plural': 'nØlleformulärssvar',
                'permissions': [('edit_nolleForm', 'Can edit the nolleForm form')],
            },
        ),
        migrations.AddField(
            model_name='happening',
            name='editors',
            field=models.ManyToManyField(to='nollesystemet.UserProfile'),
        ),
        migrations.AddField(
            model_name='happening',
            name='exclusive_access',
            field=models.ManyToManyField(blank=True, limit_choices_to=nollesystemet.models.happening._is_not_nollan, related_name='exclusive_access_happenings', to='nollesystemet.UserProfile'),
        ),
        migrations.AddField(
            model_name='happening',
            name='nolle_groups',
            field=models.ManyToManyField(related_name='happening_nolle_group', to='nollesystemet.NolleGroup'),
        ),
        migrations.AddField(
            model_name='extraoption',
            name='happening',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.Happening'),
        ),
        migrations.AddField(
            model_name='drinkoption',
            name='happening',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.Happening'),
        ),
        migrations.CreateModel(
            name='UserTypeBasePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Fadder'), (2, 'nØllan'), (3, 'Senior'), (4, 'Extern'), (5, 'Administrativ')])),
                ('price', models.PositiveSmallIntegerField()),
                ('happening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nollesystemet.Happening')),
            ],
            options={
                'verbose_name': 'Baspris',
                'verbose_name_plural': 'Baspris',
                'unique_together': {('happening', 'user_type')},
            },
        ),
        migrations.CreateModel(
            name='SiteText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, validators=[nollesystemet.models.site.validate_variable_name])),
                ('text', models.TextField(blank=True, validators=[nollesystemet.models.misc.validate_no_emoji])),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='nollesystemet.Site')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Texter',
                'unique_together': {('key', 'site')},
            },
        ),
        migrations.CreateModel(
            name='SiteImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, validators=[nollesystemet.models.site.validate_variable_name])),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='nollesystemet.Site')),
            ],
            options={
                'verbose_name': 'Bild',
                'verbose_name_plural': 'Bilder',
                'unique_together': {('key', 'site')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='extraoption',
            unique_together={('happening', 'extra_option')},
        ),
        migrations.AlterUniqueTogether(
            name='drinkoption',
            unique_together={('happening', 'drink')},
        ),
    ]
